{"version":3,"file":"wtvr3d-demo-b7ec685f.js","sources":["../node_modules/lit-html/lib/directive.js","../node_modules/lit-html/lib/dom.js","../node_modules/lit-html/lib/part.js","../node_modules/lit-html/lib/template.js","../node_modules/lit-html/lib/template-instance.js","../node_modules/lit-html/lib/template-result.js","../node_modules/lit-html/lib/parts.js","../node_modules/lit-html/lib/default-template-processor.js","../node_modules/lit-html/lib/template-factory.js","../node_modules/lit-html/lib/render.js","../node_modules/lit-html/lit-html.js","../node_modules/lit-html/lib/modify-template.js","../node_modules/lit-html/lib/shady-render.js","../node_modules/lit-element/lib/updating-element.js","../node_modules/lit-element/lib/css-tag.js","../node_modules/lit-element/lit-element.js","../node_modules/lit-html/directives/class-map.js","../pkg/wtvr3d.js","../node_modules/stats.js/src/Stats.js","../components/lit-texture/lit-texture.js","../components/lit-texture/src/LitTexture.js","../components/wtvr3d-demo/wtvr3d-demo.js","../components/wtvr3d-demo/src/Wtvr3dDemo.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst microtaskPromise = Promise.resolve(true);\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        this._updatePromise = microtaskPromise;\n        this._hasConnectedResolver = undefined;\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        Object.defineProperty(this.prototype, name, {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        });\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        this._updateState = this._updateState | STATE_HAS_CONNECTED;\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection and if one is pending connection the\n        // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n        // update, otherwise requestUpdate.\n        if (this._hasConnectedResolver) {\n            this._hasConnectedResolver();\n            this._hasConnectedResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor._classProperties.get(propName) || defaultPropertyDeclaration;\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor._classProperties.get(name) || defaultPropertyDeclaration;\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        // Mark state updating...\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        let resolve;\n        let reject;\n        const previousUpdatePromise = this._updatePromise;\n        this._updatePromise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await previousUpdatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        // Make sure the element has connected before updating.\n        if (!this._hasConnected) {\n            await new Promise((res) => this._hasConnectedResolver = res);\n        }\n        try {\n            const result = this.performUpdate();\n            // If `performUpdate` returns a Promise, we await it. This is done to\n            // enable coordinating updates with a scheduler. Note, the result is\n            // checked to avoid delaying an additional microtask unless we need to.\n            if (result != null) {\n                await result;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n        resolve(!this._hasRequestedUpdate);\n    }\n    get _hasConnected() {\n        return (this._updateState & STATE_HAS_CONNECTED);\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            throw e;\n        }\n        finally {\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { TemplateResult } from 'lit-html';\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(styles, result = []) {\n    for (let i = 0, length = styles.length; i < length; i++) {\n        const value = styles[i];\n        if (Array.isArray(value)) {\n            arrayFlat(value, result);\n        }\n        else {\n            result.push(value);\n        }\n    }\n    return result;\n}\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles) => styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\nexport class LitElement extends UpdatingElement {\n    /** @nocollapse */\n    static finalize() {\n        // The Closure JS Compiler does not always preserve the correct \"this\"\n        // when calling static super methods (b/137460243), so explicitly bind.\n        super.finalize.call(this);\n        // Prepare styling that is stamped at first render time. Styling\n        // is built from user provided `styles` or is inherited from the superclass.\n        this._styles =\n            this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n                this._getUniqueStyles() :\n                this._styles || [];\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Take care not to call `this.styles` multiple times since this generates\n        // new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.styles;\n        const styles = [];\n        if (Array.isArray(userStyles)) {\n            const flatStyles = flattenStyles(userStyles);\n            // As a performance optimization to avoid duplicated styling that can\n            // occur especially when composing via subclassing, de-duplicate styles\n            // preserving the last item in the list. The last item is kept to\n            // try to preserve cascade order with the assumption that it's most\n            // important that last added styles override previous styles.\n            const styleSet = flatStyles.reduceRight((set, s) => {\n                set.add(s);\n                // on IE set.add does not return the set.\n                return set;\n            }, new Set());\n            // Array.from does not work on Set in IE\n            styleSet.forEach((v) => styles.unshift(v));\n        }\n        else if (userStyles) {\n            styles.push(userStyles);\n        }\n        return styles;\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        super.update(changedProperties);\n        const templateResult = this.render();\n        if (templateResult instanceof TemplateResult) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method must return\n     * a lit-html TemplateResult. Setting properties inside this method will *not*\n     * trigger the element to update.\n     */\n    render() {\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the lit-html TemplateResult to the element's\n * DOM.\n * @param {TemplateResult} Template to render.\n * @param {Element|DocumentFragment} Node into which to render.\n * @param {String} Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    // handle static classes\n    if (!classMapCache.has(part)) {\n        element.className = committer.strings.join(' ');\n    }\n    const { classList } = element;\n    // remove old classes that no longer apply\n    const oldInfo = classMapCache.get(part);\n    for (const name in oldInfo) {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n        }\n    }\n    // add new classes\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (!oldInfo || value !== oldInfo[name]) {\n            // We explicitly want a loose truthy check here because\n            // it seems more convenient that '' and 0 are skipped.\n            const method = value ? 'add' : 'remove';\n            classList[method](name);\n        }\n    }\n    classMapCache.set(part, classInfo);\n});\n//# sourceMappingURL=class-map.js.map","\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    if (typeof(heap_next) !== 'number') throw new Error('corrupt heap');\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nfunction _assertBoolean(n) {\n    if (typeof(n) !== 'boolean') {\n        throw new Error('expected a boolean argument');\n    }\n}\n\nfunction _assertNum(n) {\n    if (typeof(n) !== 'number') throw new Error('expected a number argument');\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (typeof(arg) !== 'string') throw new Error('expected a string argument');\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n        if (ret.read !== arg.length) throw new Error('failed to pass whole string');\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction logError(e) {\n    let error = (function () {\n        try {\n            return e instanceof Error ? `${e.message}\\n\\nStack:\\n${e.stack}` : e.toString();\n        } catch(_) {\n            return \"<failed to stringify thrown value>\";\n        }\n    }());\n    console.error(\"wasm-bindgen: imported JS function that was not marked as `catch` threw an error:\", error);\n    throw e;\n}\n\nfunction handleError(e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n}\n\nlet cachegetFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n    if (cachegetFloat32Memory0 === null || cachegetFloat32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory0;\n}\n\nfunction getArrayF32FromWasm0(ptr, len) {\n    return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction getArrayI32FromWasm0(ptr, len) {\n    return getInt32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n*/\nexport const LightType = Object.freeze({ Ambiant:1,Directional:2,Point:3,Cone:4, });\n/**\n*/\nexport const FileType = Object.freeze({ WMesh:1,WMaterial:2,WMatInstance:3, });\n/**\n* Scene representation, to be shared with JS.\n* A scene holds a renderer and a `specs` world.\n*/\nexport class Scene {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Scene.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_scene_free(ptr);\n    }\n    /**\n    * Constructor. Initializes a new `Scene` with a fresh world and registers common components.\n    * @returns {Scene}\n    */\n    constructor() {\n        var ret = wasm.scene_new();\n        return Scene.__wrap(ret);\n    }\n    /**\n    * Creates an entity holding a Camera. Returns its Entity ID.\n    * @param {number} this.ptr\n    * @param {Vector3Data} aspect_ratio\n    * @param {Vector3Data} fov\n    * @returns {number}\n    */\n    create_camera_entity(aspect_ratio, fov, znear, zfar, position, target) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertClass(position, Vector3Data);\n        if (position.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = position.ptr;\n        position.ptr = 0;\n        _assertClass(target, Vector3Data);\n        if (target.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr1 = target.ptr;\n        target.ptr = 0;\n        var ret = wasm.scene_create_camera_entity(this.ptr, aspect_ratio, fov, znear, zfar, ptr0, ptr1);\n        return ret >>> 0;\n    }\n    /**\n    * Creates an entity holding a light and an optional direction/position if supplied\n    * @param {number} this.ptr\n    * @param {number} light_type\n    * @param {Vector3Data} color\n    * @param {Vector3Data} intensity\n    * @returns {number}\n    */\n    create_light_entity(light_type, color, intensity, attenuation, direction_or_position) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(light_type);\n        _assertClass(color, Vector3Data);\n        if (color.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = color.ptr;\n        color.ptr = 0;\n        _assertClass(direction_or_position, Vector3Data);\n        if (direction_or_position.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr1 = direction_or_position.ptr;\n        direction_or_position.ptr = 0;\n        var ret = wasm.scene_create_light_entity(this.ptr, light_type, ptr0, intensity, attenuation, ptr1);\n        return ret >>> 0;\n    }\n    /**\n    * @param {string} mesh_data_id\n    * @param {string} material_instance_id\n    * @returns {number}\n    */\n    create_mesh_entity(mesh_data_id, material_instance_id) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ptr0 = passStringToWasm0(mesh_data_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(material_instance_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.scene_create_mesh_entity(this.ptr, ptr0, len0, ptr1, len1);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} entity_id\n    * @param {Vector3Data} new_translation\n    */\n    set_transform_translation(entity_id, new_translation) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(entity_id);\n        _assertClass(new_translation, Vector3Data);\n        if (new_translation.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = new_translation.ptr;\n        new_translation.ptr = 0;\n        wasm.scene_set_transform_translation(this.ptr, entity_id, ptr0);\n    }\n    /**\n    * @param {number} entity_id\n    * @param {Vector3Data} new_rotation\n    */\n    set_transform_rotation(entity_id, new_rotation) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(entity_id);\n        _assertClass(new_rotation, Vector3Data);\n        if (new_rotation.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = new_rotation.ptr;\n        new_rotation.ptr = 0;\n        wasm.scene_set_transform_rotation(this.ptr, entity_id, ptr0);\n    }\n    /**\n    * @param {number} entity_id\n    * @param {Vector3Data} new_scale\n    */\n    set_transform_scale(entity_id, new_scale) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(entity_id);\n        _assertClass(new_scale, Vector3Data);\n        if (new_scale.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = new_scale.ptr;\n        new_scale.ptr = 0;\n        wasm.scene_set_transform_scale(this.ptr, entity_id, ptr0);\n    }\n    /**\n    * @param {number} entity_id\n    * @param {Vector3Data} new_translation\n    * @param {Vector3Data} new_rotation\n    * @param {Vector3Data} new_scale\n    */\n    set_transform(entity_id, new_translation, new_rotation, new_scale) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(entity_id);\n        _assertClass(new_translation, Vector3Data);\n        if (new_translation.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr0 = new_translation.ptr;\n        new_translation.ptr = 0;\n        _assertClass(new_rotation, Vector3Data);\n        if (new_rotation.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr1 = new_rotation.ptr;\n        new_rotation.ptr = 0;\n        _assertClass(new_scale, Vector3Data);\n        if (new_scale.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        var ptr2 = new_scale.ptr;\n        new_scale.ptr = 0;\n        wasm.scene_set_transform(this.ptr, entity_id, ptr0, ptr1, ptr2);\n    }\n    /**\n    * @param {number} entity_id\n    * @param {number} parent_id\n    */\n    set_parent(entity_id, parent_id) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(entity_id);\n        _assertNum(parent_id);\n        wasm.scene_set_parent(this.ptr, entity_id, parent_id);\n    }\n    /**\n    * @param {Uint8Array} file_data\n    * @param {number} file_type\n    * @returns {string}\n    */\n    register_asset(file_data, file_type) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            _assertNum(this.ptr);\n            var ptr0 = passArray8ToWasm0(file_data, wasm.__wbindgen_malloc);\n            var len0 = WASM_VECTOR_LEN;\n            _assertNum(file_type);\n            wasm.scene_register_asset(8, this.ptr, ptr0, len0, file_type);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * @param {any} image\n    * @param {string} id\n    * @returns {string}\n    */\n    register_texture(image, id) {\n        try {\n            if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n            _assertNum(this.ptr);\n            var ptr0 = passStringToWasm0(id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            wasm.scene_register_texture(8, this.ptr, addBorrowedObject(image), ptr0, len0);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            heap[stack_pointer++] = undefined;\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Initializes the renderer for this Scene. This might fail if no valid camera is supplied.\n    * @param {any} canvas\n    * @param {any} context\n    * @param {number} camera_entity\n    */\n    initialize(canvas, context, camera_entity) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        _assertNum(camera_entity);\n        wasm.scene_initialize(this.ptr, addHeapObject(canvas), addHeapObject(context), camera_entity);\n    }\n    /**\n    * Function to be called each frame.\n    */\n    update() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.scene_update(this.ptr);\n    }\n}\n/**\n* Simple transfer type for Vector3 since it is not `wasm-bindgen` compatible.\n*/\nexport class Vector3Data {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Vector3Data.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_vector3data_free(ptr);\n    }\n    /**\n    * x coordinate\n    * @returns {number}\n    */\n    get x() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.__wbg_get_vector3data_x(this.ptr);\n        return ret;\n    }\n    /**\n    * x coordinate\n    * @param {number} this.ptr\n    */\n    set x(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.__wbg_set_vector3data_x(this.ptr, arg0);\n    }\n    /**\n    * y coordinate\n    * @returns {number}\n    */\n    get y() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.__wbg_get_vector3data_y(this.ptr);\n        return ret;\n    }\n    /**\n    * y coordinate\n    * @param {number} this.ptr\n    */\n    set y(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.__wbg_set_vector3data_y(this.ptr, arg0);\n    }\n    /**\n    * z coordinate\n    * @returns {number}\n    */\n    get z() {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        var ret = wasm.__wbg_get_vector3data_z(this.ptr);\n        return ret;\n    }\n    /**\n    * z coordinate\n    * @param {number} this.ptr\n    */\n    set z(arg0) {\n        if (this.ptr == 0) throw new Error('Attempt to use a moved value');\n        _assertNum(this.ptr);\n        wasm.__wbg_set_vector3data_z(this.ptr, arg0);\n    }\n    /**\n    * Constructor: creates a new VectorData from 3 coordinates.\n    * @returns {Vector3Data}\n    */\n    constructor(x, y, z) {\n        var ret = wasm.vector3data_new(x, y, z);\n        return Vector3Data.__wrap(ret);\n    }\n}\n\nfunction init(module) {\n    if (typeof module === 'undefined') {\n        module = import.meta.url.replace(/\\.js$/, '_bg.wasm');\n    }\n    let result;\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        var ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        var ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n        try {\n            try {\n                console.error(getStringFromWasm0(arg0, arg1));\n            } finally {\n                wasm.__wbindgen_free(arg0, arg1);\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_new_59cb74e423758ede = function() {\n        try {\n            var ret = new Error();\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n        try {\n            var ret = getObject(arg1).stack;\n            var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            getInt32Memory0()[arg0 / 4 + 1] = len0;\n            getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_error_1_ = function(arg0) {\n        try {\n            console.error(getObject(arg0));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_warn_1_ = function(arg0) {\n        try {\n            console.warn(getObject(arg0));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_client_width_Element = function(arg0) {\n        try {\n            var ret = getObject(arg0).clientWidth;\n            _assertNum(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_client_height_Element = function(arg0) {\n        try {\n            var ret = getObject(arg0).clientHeight;\n            _assertNum(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_width_HTMLCanvasElement = function(arg0) {\n        try {\n            var ret = getObject(arg0).width;\n            _assertNum(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_set_width_HTMLCanvasElement = function(arg0, arg1) {\n        try {\n            getObject(arg0).width = arg1 >>> 0;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_height_HTMLCanvasElement = function(arg0) {\n        try {\n            var ret = getObject(arg0).height;\n            _assertNum(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_set_height_HTMLCanvasElement = function(arg0, arg1) {\n        try {\n            getObject(arg0).height = arg1 >>> 0;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_buffer_data_with_array_buffer_view_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).bufferData(arg1 >>> 0, getObject(arg2), arg3 >>> 0);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_tex_image_2d_with_u32_and_u32_and_image_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        try {\n            try {\n                getObject(arg0).texImage2D(arg1 >>> 0, arg2, arg3, arg4 >>> 0, arg5 >>> 0, getObject(arg6));\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform1fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform1fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform1iv_with_i32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform1iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform2fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform2fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform2iv_with_i32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform2iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform3fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform3fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform3iv_with_i32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform3iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform4fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform4fv(getObject(arg1), getArrayF32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform4iv_with_i32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).uniform4iv(getObject(arg1), getArrayI32FromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform_matrix2fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).uniformMatrix2fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform_matrix3fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).uniformMatrix3fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform_matrix4fv_with_f32_array_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).uniformMatrix4fv(getObject(arg1), arg2 !== 0, getArrayF32FromWasm0(arg3, arg4));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_active_texture_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).activeTexture(arg1 >>> 0);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_attach_shader_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            getObject(arg0).attachShader(getObject(arg1), getObject(arg2));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_bind_buffer_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            getObject(arg0).bindBuffer(arg1 >>> 0, getObject(arg2));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_bind_texture_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            getObject(arg0).bindTexture(arg1 >>> 0, getObject(arg2));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_clear_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).clear(arg1 >>> 0);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_clear_color_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).clearColor(arg1, arg2, arg3, arg4);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_compile_shader_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).compileShader(getObject(arg1));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_create_buffer_WebGLRenderingContext = function(arg0) {\n        try {\n            var ret = getObject(arg0).createBuffer();\n            return isLikeNone(ret) ? 0 : addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_create_program_WebGLRenderingContext = function(arg0) {\n        try {\n            var ret = getObject(arg0).createProgram();\n            return isLikeNone(ret) ? 0 : addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_create_shader_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            var ret = getObject(arg0).createShader(arg1 >>> 0);\n            return isLikeNone(ret) ? 0 : addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_create_texture_WebGLRenderingContext = function(arg0) {\n        try {\n            var ret = getObject(arg0).createTexture();\n            return isLikeNone(ret) ? 0 : addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_delete_program_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).deleteProgram(getObject(arg1));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_delete_shader_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).deleteShader(getObject(arg1));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_draw_elements_with_i32_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).drawElements(arg1 >>> 0, arg2, arg3 >>> 0, arg4);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_enable_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).enable(arg1 >>> 0);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_enable_vertex_attrib_array_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).enableVertexAttribArray(arg1 >>> 0);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_attrib_location_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            var ret = getObject(arg0).getAttribLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n            _assertNum(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_program_info_log_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            var ret = getObject(arg1).getProgramInfoLog(getObject(arg2));\n            var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            getInt32Memory0()[arg0 / 4 + 1] = len0;\n            getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_program_parameter_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            var ret = getObject(arg0).getProgramParameter(getObject(arg1), arg2 >>> 0);\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_shader_info_log_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            var ret = getObject(arg1).getShaderInfoLog(getObject(arg2));\n            var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            var len0 = WASM_VECTOR_LEN;\n            getInt32Memory0()[arg0 / 4 + 1] = len0;\n            getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_shader_parameter_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            var ret = getObject(arg0).getShaderParameter(getObject(arg1), arg2 >>> 0);\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_get_uniform_location_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            var ret = getObject(arg0).getUniformLocation(getObject(arg1), getStringFromWasm0(arg2, arg3));\n            return isLikeNone(ret) ? 0 : addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_link_program_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).linkProgram(getObject(arg1));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_shader_source_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).shaderSource(getObject(arg1), getStringFromWasm0(arg2, arg3));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_tex_parameteri_WebGLRenderingContext = function(arg0, arg1, arg2, arg3) {\n        try {\n            getObject(arg0).texParameteri(arg1 >>> 0, arg2 >>> 0, arg3);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_uniform1i_WebGLRenderingContext = function(arg0, arg1, arg2) {\n        try {\n            getObject(arg0).uniform1i(getObject(arg1), arg2);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_use_program_WebGLRenderingContext = function(arg0, arg1) {\n        try {\n            getObject(arg0).useProgram(getObject(arg1));\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_vertex_attrib_pointer_with_i32_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        try {\n            getObject(arg0).vertexAttribPointer(arg1 >>> 0, arg2, arg3 >>> 0, arg4 !== 0, arg5, arg6);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_viewport_WebGLRenderingContext = function(arg0, arg1, arg2, arg3, arg4) {\n        try {\n            getObject(arg0).viewport(arg1, arg2, arg3, arg4);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_instanceof_Window = function(arg0) {\n        try {\n            var ret = getObject(arg0) instanceof Window;\n            _assertBoolean(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__widl_f_device_pixel_ratio_Window = function(arg0) {\n        try {\n            var ret = getObject(arg0).devicePixelRatio;\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_newnoargs_a9cd98b36c38f53e = function(arg0, arg1) {\n        try {\n            var ret = new Function(getStringFromWasm0(arg0, arg1));\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_call_222be890f6f564bb = function(arg0, arg1) {\n        try {\n            try {\n                var ret = getObject(arg0).call(getObject(arg1));\n                return addHeapObject(ret);\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_is_0519fe977b860a46 = function(arg0, arg1) {\n        try {\n            var ret = Object.is(getObject(arg0), getObject(arg1));\n            _assertBoolean(ret);\n            return ret;\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_globalThis_1c2aa6db3ecb073e = function() {\n        try {\n            try {\n                var ret = globalThis.globalThis;\n                return addHeapObject(ret);\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_self_e5cdcdef79894248 = function() {\n        try {\n            try {\n                var ret = self.self;\n                return addHeapObject(ret);\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_window_44ec8ac43884a4cf = function() {\n        try {\n            try {\n                var ret = window.window;\n                return addHeapObject(ret);\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_global_c9abcb94a14733fe = function() {\n        try {\n            try {\n                var ret = global.global;\n                return addHeapObject(ret);\n            } catch (e) {\n                handleError(e)\n            }\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_b4a6154c3a498e67 = function(arg0, arg1, arg2) {\n        try {\n            var ret = new Uint16Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_7b9124ec8c6b9e18 = function(arg0, arg1, arg2) {\n        try {\n            var ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbg_buffer_89a8560ab6a3d9c6 = function(arg0) {\n        try {\n            var ret = getObject(arg0).buffer;\n            return addHeapObject(ret);\n        } catch (e) {\n            logError(e)\n        }\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        var ret = getObject(arg0) === undefined;\n        _assertBoolean(ret);\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        var ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        _assertNum(ret);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        var ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    if ((typeof URL === 'function' && module instanceof URL) || typeof module === 'string' || (typeof Request === 'function' && module instanceof Request)) {\n\n        const response = fetch(module);\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            result = WebAssembly.instantiateStreaming(response, imports)\n            .catch(e => {\n                return response\n                .then(r => {\n                    if (r.headers.get('Content-Type') != 'application/wasm') {\n                        console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                        return r.arrayBuffer();\n                    } else {\n                        throw e;\n                    }\n                })\n                .then(bytes => WebAssembly.instantiate(bytes, imports));\n            });\n        } else {\n            result = response\n            .then(r => r.arrayBuffer())\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        }\n    } else {\n\n        result = WebAssembly.instantiate(module, imports)\n        .then(result => {\n            if (result instanceof WebAssembly.Instance) {\n                return { instance: result, module };\n            } else {\n                return result;\n            }\n        });\n    }\n    return result.then(({instance, module}) => {\n        wasm = instance.exports;\n        init.__wbindgen_wasm_module = module;\n\n        return wasm;\n    });\n}\n\nexport default init;\n\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats as default };\n","import { LitTexture } from './src/LitTexture.js';\r\n\r\nwindow.customElements.define('lit-texture', LitTexture);","import { LitElement, html, css } from 'lit-element';\r\nimport {Scene,Vector3Data,FileType,LightType} from \"../../../pkg/wtvr3d.js\";\r\nimport  Stats  from 'stats.js/src/Stats.js';\r\n\r\nexport class LitTexture extends LitElement {\r\n\r\n    constructor(){\r\n        super();\r\n        this.time = performance.now();\r\n        this.rotation = 0;\r\n    }\r\n    static get styles() {\r\n        return css`\r\n        :host {\r\n            position : relative;\r\n            display : block;\r\n            height : 100%;\r\n            width : 100%;\r\n        }\r\n        @media (min-width : 700px){\r\n            .stats {\r\n                position : absolute !important;\r\n            }\r\n        }\r\n        canvas {\r\n            height : 100%;\r\n            width : 100%;\r\n            display : block;\r\n        }\r\n        `;\r\n    }\r\n    firstUpdated() {\r\n        this.init();\r\n    }\r\n\r\n    async getAssets(){\r\n        let headTex = await this.getTexture(\"../../../assets/textures/HeadDiffuse.jpg\");\r\n        let headMap = await this.getTexture(\"../../../assets/textures/HeadNormals.png\");\r\n        let response = await fetch(\"../../../assets/meshes/head.wmesh\");\r\n        let mesh_data = new Uint8Array(await response.arrayBuffer());\r\n        let response2 = await fetch(\"../../../assets/materials/normal_map.wmaterial\");\r\n        let material_data = new Uint8Array(await response2.arrayBuffer());\r\n        let response3 = await fetch(\"../../../assets/materials/normal_map.wmatinstance\");\r\n        let mat_inst_data = new Uint8Array(await response3.arrayBuffer());\r\n        return [mesh_data, material_data, mat_inst_data,headTex,headMap];\r\n    }\r\n\r\n    async init() {\r\n        this.stats = new Stats();\r\n        this.stats.showPanel( 0 ); \r\n        this.shadowRoot.appendChild( this.stats.dom );\r\n        this.stats.dom.classList.add(\"stats\");\r\n        const [mesh, material, material_instance,texture,normal_map] = await this.getAssets();\r\n        const canvas = this.shadowRoot.querySelector(\"canvas\");\r\n        const context = canvas.getContext(\"webgl\");\r\n        const scene = new Scene();\r\n        const position = new Vector3Data(0,4,10);\r\n        const towards = new Vector3Data(0,0,0);\r\n        let camera_id = scene.create_camera_entity(16/9,3.14/4,1,1000, position,towards);\r\n        scene.initialize(canvas, context, camera_id);\r\n        scene.register_texture(texture,\"head_diffuse\");\r\n        scene.register_texture(normal_map,\"head_normal\");\r\n        let mesh_id = scene.register_asset(mesh,FileType.WMesh);\r\n        let material_id = scene.register_asset(material,FileType.WMaterial);\r\n        let matinstance_id = scene.register_asset(material_instance,FileType.WMatInstance);\r\n        this.mesh_entity_id = scene.create_mesh_entity(mesh_id,matinstance_id);\r\n        let ambiant = scene.create_light_entity(LightType.Ambiant,new Vector3Data(1.0,1.0,1.0),0.4,0.0,new Vector3Data(0.0,0.0,0.0));\r\n        let dir = scene.create_light_entity(LightType.Directional,new Vector3Data(0.9,0.7,0.3),1.2,0.0,new Vector3Data(7,-4,-5));\r\n        let dir2 = scene.create_light_entity(LightType.Directional,new Vector3Data(0.2,0.7,0.8),1.2,0.0,new Vector3Data(-10,-3.0,1));\r\n        this.scene = scene;\r\n        this.update_scene();\r\n    }\r\n\r\n    update_scene(){\r\n        this.stats.begin();\r\n        let deltaTime = performance.now() - this.time;\r\n        this.time = performance.now();\r\n        this.rotation = (this.rotation + (2*deltaTime * (3.14159*2) /12000 )) % (3.14159*2);\r\n        const rotationVector = new Vector3Data(0.0,this.rotation,0.0);\r\n        this.scene.set_transform_rotation(this.mesh_entity_id,rotationVector);\r\n        this.scene.update();\r\n        this.stats.end();\r\n        this.animationFrameRequest = requestAnimationFrame(() => {\r\n            this.update_scene();\r\n        });\r\n    }\r\n\r\n    disconnectedCallback(){\r\n        cancelAnimationFrame(this.animationFrameRequest);\r\n        this.scene.free();\r\n    }\r\n\r\n    getTexture(filePath) {\r\n        return new Promise((resolve,reject) => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                resolve(image);\r\n            }\r\n            image.src = filePath;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return html`<canvas></canvas>`;\r\n    }\r\n}","import { Wtvr3dDemo } from './src/Wtvr3dDemo.js';\n\nwindow.customElements.define('wtvr3d-demo', Wtvr3dDemo);\n","import { LitElement, html, css } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport init from \"../../../pkg/wtvr3d.js\";\nimport {} from '../../lit-texture/lit-texture.js';\n\nexport class Wtvr3dDemo extends LitElement {\n  static get properties() {\n    return {\n      page : { type : String },\n      wasmReady : { type : Boolean }\n    };\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display : flex;\n        height : 100%;\n        flex-direction: row;\n        align-items: center;\n        justify-content: flex-start;\n        font-size: calc(10px + 2vmin);\n        color: #1a2b42;\n      }\n\n      nav {\n        min-width : 250px;\n        background: #fff;\n        height : 100%;\n      }\n\n      nav ul {\n        max-width : 200px;\n        margin: 0 auto;\n        padding: 0;\n      }\n\n      nav ul li {\n        display: flex;\n      }\n\n      nav ul li a {\n        color: #5a5c5e;\n        text-decoration: none;\n        font-size: 18px;\n        line-height: 36px;\n      }\n\n      nav ul li a:hover,\n      nav ul li a.active {\n        color: blue;\n      }\n\n      main {\n        flex-grow: 1;\n      }\n\n      main {\n        height: 100%;\n        width : 100%;\n        display : flex;\n        align-items : center;\n        justify-content : center;\n      }\n      @media (max-width : 700px){\n        :host {\n          flex-direction : column;\n        }\n        nav {\n          height : auto;\n        }\n      }\n    `;\n  }\n\n  constructor() {\n    super();\n    this.page = 'default';\n    this.wasmReady = false;\n    this.initializeWasm();\n    \n  }\n\n  async initializeWasm() {\n    await init(\"../../../pkg/wtvr3d_bg.wasm\");\n    this.wasmReady = true;\n  }\n\n  render() {\n    if(!this.wasmReady) {\n      return html``;\n    }\n    return html`\n      <nav>\n        <ul>\n          <li>\n            <a href=\"#default\" class=${this.__navClass('default')} @click=${this.__onNavClicked}>\n              Default\n            </a>\n          </li>\n          <li>\n            <a href=\"#litTexture\" class=${this.__navClass('litTexture')} @click=${this.__onNavClicked}>\n              Lit Texture\n            </a>\n          </li>\n        </ul>\n  </nav>\n\n      <main>\n        ${this._renderPage()}\n      </main>\n    `;\n  }\n\n  _renderPage() {\n    switch (this.page) {\n      case 'default':\n        return html`\n          <h1 class=\"center\">Wtvr3d Demos</h1>\n        `;\n      case 'litTexture':\n        return html`\n          <lit-texture></lit-texture>\n        `;\n      default:\n        return html`\n          <p>Page not found try going to <a href=\"#default\">Default</a></p>\n        `;\n    }\n  }\n\n  __onNavClicked(ev) {\n    ev.preventDefault();\n    this.page = ev.target.hash.substring(1);\n  }\n\n  __navClass(page) {\n    return classMap({ active: this.page === page });\n  }\n}\n"],"names":["directives","WeakMap","isDirective","o","has","isCEPolyfill","undefined","window","customElements","polyfillWrapFlushCallback","removeNodes","container","start","end","n","nextSibling","removeChild","noChange","nothing","marker","String","Math","random","slice","nodeMarker","markerRegex","RegExp","boundAttributeSuffix","Template","[object Object]","result","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","length","node","nextNode","nodeType","hasAttributes","attributes","count","i","endsWith","name","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","push","type","tagName","currentNode","data","indexOf","parent","parentNode","lastIndex","insert","s","createMarker","match","createTextNode","insertBefore","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","TemplateInstance","template","processor","options","__parts","this","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","l","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","isPrimitive","value","isIterable","Array","isArray","Symbol","iterator","AttributeCommitter","dirty","_createPart","AttributePart","text","v","t","setAttribute","_getValue","committer","directive","NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","clear","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","Error","PropertyCommitter","single","PropertyPart","super","eventOptionsSupported","addEventListener","removeEventListener","_e","EventPart","eventName","eventContext","__boundHandleEvent","e","handleEvent","newListener","oldListener","shouldRemoveListener","capture","once","passive","shouldAddListener","__options","getOptions","event","call","defaultTemplateProcessor","prefix","templateCache","templateCaches","get","stringsArray","keyString","Map","set","key","join","getTemplateElement","walkerNodeFilter","removeNodesFromTemplate","nextActiveIndexInTemplateParts","removeCount","nodesToRemoveInTemplate","currentRemovingNode","forEach","countNodes","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","console","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","Set","prepareTemplateStyles","renderedDOM","add","templateElement","styles","querySelectorAll","condensedStyle","style","textContent","templates","from","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","firstChild","querySelector","nativeShadow","removes","JSCompiler_renameProperty","prop","_obj","defaultConverter","Boolean","Object","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","attribute","converter","reflect","hasChanged","microtaskPromise","Promise","resolve","STATE_HAS_UPDATED","STATE_UPDATE_REQUESTED","STATE_IS_REFLECTING_TO_ATTRIBUTE","STATE_IS_REFLECTING_TO_PROPERTY","STATE_HAS_CONNECTED","finalized","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","_hasConnectedResolver","_changedProperties","_reflectingProperties","initialize","finalize","_classProperties","p","attr","_attributeNameForProperty","_attributeToPropertyMap","hasOwnProperty","superProperties","getPrototypeOf","k","_ensureClassProperties","noAccessor","prototype","defineProperty","oldValue","_requestUpdate","configurable","enumerable","superCtor","props","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","constructor","_v","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","reject","previousUpdatePromise","res","rej","_hasConnected","performUpdate","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","cssText","safeToken","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","flattenStyles","flat","Infinity","arrayFlat","LitElement","_styles","_getUniqueStyles","userStyles","reduceRight","unshift","renderRoot","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","map","styleSheet","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","hasUpdated","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","assign","appendInto","litRender","delete","classMapCache","classMap","f","d","classInfo","className","classList","oldInfo","remove","wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","fill","heap_next","addHeapObject","obj","getObject","takeObject","ret","dropObject","_assertBoolean","_assertNum","_assertClass","klass","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","cachegetInt32Memory0","getInt32Memory0","Int32Array","stack_pointer","logError","error","message","toString","_","handleError","__wbindgen_exn_store","cachegetFloat32Memory0","getArrayF32FromWasm0","Float32Array","getArrayI32FromWasm0","isLikeNone","x","LightType","freeze","Ambiant","Directional","Point","Cone","FileType","WMesh","WMaterial","WMatInstance","Scene","create","free","__wbg_scene_free","scene_new","__wrap","create_camera_entity","aspect_ratio","fov","znear","zfar","position","target","Vector3Data","ptr0","ptr1","scene_create_camera_entity","create_light_entity","light_type","color","intensity","attenuation","direction_or_position","scene_create_light_entity","create_mesh_entity","mesh_data_id","material_instance_id","__wbindgen_malloc","__wbindgen_realloc","len0","len1","scene_create_mesh_entity","set_transform_translation","entity_id","new_translation","scene_set_transform_translation","set_transform_rotation","new_rotation","scene_set_transform_rotation","set_transform_scale","new_scale","scene_set_transform_scale","set_transform","ptr2","scene_set_transform","set_parent","parent_id","scene_set_parent","register_asset","file_data","file_type","passArray8ToWasm0","scene_register_asset","r0","r1","__wbindgen_free","register_texture","image","id","scene_register_texture","addBorrowedObject","canvas","context","camera_entity","scene_initialize","scene_update","__wbg_vector3data_free","__wbg_get_vector3data_x","arg0","__wbg_set_vector3data_x","__wbg_get_vector3data_y","__wbg_set_vector3data_y","__wbg_get_vector3data_z","__wbg_set_vector3data_z","y","z","vector3data_new","Stats","addPanel","panel","dom","showPanel","children","display","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memPanel","REVISION","begin","time","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","fg","bg","min","max","round","PR","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","width","height","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","drawImage","define","rotation","init","headTex","getTexture","headMap","response","fetch","mesh_data","arrayBuffer","response2","material_data","response3","stats","shadowRoot","mesh","material","material_instance","texture","normal_map","getAssets","scene","towards","camera_id","mesh_id","matinstance_id","mesh_entity_id","update_scene","deltaTime","rotationVector","animationFrameRequest","requestAnimationFrame","disconnectedCallback","cancelAnimationFrame","filePath","Image","onload","src","page","wasmReady","initializeWasm","module","importMeta","url","replace","imports","wbg","__wbindgen_string_new","arg1","__wbindgen_object_clone_ref","__wbindgen_object_drop_ref","__wbg_error_4bb6c2a97407129a","__wbg_new_59cb74e423758ede","__wbg_stack_558ba5917b466edd","__widl_f_error_1_","__widl_f_warn_1_","__widl_f_client_width_Element","clientWidth","__widl_f_client_height_Element","clientHeight","__widl_f_width_HTMLCanvasElement","__widl_f_set_width_HTMLCanvasElement","__widl_f_height_HTMLCanvasElement","__widl_f_set_height_HTMLCanvasElement","__widl_f_buffer_data_with_array_buffer_view_WebGLRenderingContext","arg2","arg3","bufferData","__widl_f_tex_image_2d_with_u32_and_u32_and_image_WebGLRenderingContext","arg4","arg5","arg6","texImage2D","__widl_f_uniform1fv_with_f32_array_WebGLRenderingContext","uniform1fv","__widl_f_uniform1iv_with_i32_array_WebGLRenderingContext","uniform1iv","__widl_f_uniform2fv_with_f32_array_WebGLRenderingContext","uniform2fv","__widl_f_uniform2iv_with_i32_array_WebGLRenderingContext","uniform2iv","__widl_f_uniform3fv_with_f32_array_WebGLRenderingContext","uniform3fv","__widl_f_uniform3iv_with_i32_array_WebGLRenderingContext","uniform3iv","__widl_f_uniform4fv_with_f32_array_WebGLRenderingContext","uniform4fv","__widl_f_uniform4iv_with_i32_array_WebGLRenderingContext","uniform4iv","__widl_f_uniform_matrix2fv_with_f32_array_WebGLRenderingContext","uniformMatrix2fv","__widl_f_uniform_matrix3fv_with_f32_array_WebGLRenderingContext","uniformMatrix3fv","__widl_f_uniform_matrix4fv_with_f32_array_WebGLRenderingContext","uniformMatrix4fv","__widl_f_active_texture_WebGLRenderingContext","activeTexture","__widl_f_attach_shader_WebGLRenderingContext","attachShader","__widl_f_bind_buffer_WebGLRenderingContext","bindBuffer","__widl_f_bind_texture_WebGLRenderingContext","bindTexture","__widl_f_clear_WebGLRenderingContext","__widl_f_clear_color_WebGLRenderingContext","clearColor","__widl_f_compile_shader_WebGLRenderingContext","compileShader","__widl_f_create_buffer_WebGLRenderingContext","createBuffer","__widl_f_create_program_WebGLRenderingContext","createProgram","__widl_f_create_shader_WebGLRenderingContext","createShader","__widl_f_create_texture_WebGLRenderingContext","createTexture","__widl_f_delete_program_WebGLRenderingContext","deleteProgram","__widl_f_delete_shader_WebGLRenderingContext","deleteShader","__widl_f_draw_elements_with_i32_WebGLRenderingContext","drawElements","__widl_f_enable_WebGLRenderingContext","enable","__widl_f_enable_vertex_attrib_array_WebGLRenderingContext","enableVertexAttribArray","__widl_f_get_attrib_location_WebGLRenderingContext","getAttribLocation","__widl_f_get_program_info_log_WebGLRenderingContext","getProgramInfoLog","__widl_f_get_program_parameter_WebGLRenderingContext","getProgramParameter","__widl_f_get_shader_info_log_WebGLRenderingContext","getShaderInfoLog","__widl_f_get_shader_parameter_WebGLRenderingContext","getShaderParameter","__widl_f_get_uniform_location_WebGLRenderingContext","getUniformLocation","__widl_f_link_program_WebGLRenderingContext","linkProgram","__widl_f_shader_source_WebGLRenderingContext","shaderSource","__widl_f_tex_parameteri_WebGLRenderingContext","texParameteri","__widl_f_uniform1i_WebGLRenderingContext","uniform1i","__widl_f_use_program_WebGLRenderingContext","useProgram","__widl_f_vertex_attrib_pointer_with_i32_WebGLRenderingContext","vertexAttribPointer","__widl_f_viewport_WebGLRenderingContext","viewport","__widl_instanceof_Window","Window","__widl_f_device_pixel_ratio_Window","__wbg_newnoargs_a9cd98b36c38f53e","Function","__wbg_call_222be890f6f564bb","__wbg_is_0519fe977b860a46","is","__wbg_globalThis_1c2aa6db3ecb073e","globalThis","__wbg_self_e5cdcdef79894248","__wbg_window_44ec8ac43884a4cf","__wbg_global_c9abcb94a14733fe","global","__wbg_newwithbyteoffsetandlength_b4a6154c3a498e67","Uint16Array","__wbg_newwithbyteoffsetandlength_7b9124ec8c6b9e18","__wbg_buffer_89a8560ab6a3d9c6","__wbindgen_is_undefined","__wbindgen_boolean_get","__wbindgen_throw","__wbindgen_memory","URL","Request","WebAssembly","instantiateStreaming","catch","then","r","headers","bytes","instantiate","Instance","exports","__wbindgen_wasm_module","__navClass","__onNavClicked","_renderPage","ev","hash","substring","active"],"mappings":"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"}